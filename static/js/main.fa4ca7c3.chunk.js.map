{"version":3,"sources":["components/TodoList/TodoList.jsx","components/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","titleInput","filterBy","handleChange","e","name","target","setState","value","this","props","todos","selectUser","filtered","filter","todo","title","toLowerCase","includes","completed","className","type","placeholder","onChange","map","i","key","id","checked","readOnly","onClick","userId","React","Component","BASE_URL","getAllTodos","a","fetch","json","getUser","CurrentUser","selectedUser","loadUser","then","data","prevProps","email","phone","clearUser","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa4ca7c3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    titleInput: '',\n    filterBy: '',\n  }\n\n  handleChange = (e) => {\n    const { name } = e.target;\n\n    this.setState({\n      [name]: e.target.value,\n    });\n  }\n\n  render() {\n    const { todos, selectUser } = this.props;\n    const { titleInput, filterBy } = this.state;\n\n    let filtered = todos\n      .filter((todo) => {\n        if (titleInput && todo.title) {\n          return todo.title.toLowerCase().includes(titleInput.toLowerCase());\n        }\n\n        return todo;\n      });\n\n    if (filterBy) {\n      filtered = filtered.filter((todo) => {\n        switch (filterBy) {\n          case 'active':\n            return !todo.completed;\n\n          case 'completed':\n            return todo.completed;\n\n          default:\n            return todo;\n        }\n      });\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          name=\"titleInput\"\n          placeholder=\"Input title*\"\n          value={titleInput}\n          onChange={this.handleChange}\n        />\n        <select\n          className=\"select-goods\"\n          name=\"filterBy\"\n          onChange={this.handleChange}\n          value={filterBy}\n        >\n          <option value=\"\">choose:</option>\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {\n              filtered.map((todo, i) => (\n                <li\n                  key={todo.id}\n                  className={`TodoList__item TodoList__item--${todo.completed\n                    ? 'checked' : 'unchecked'}`}\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name={i}\n                      checked={todo.completed}\n                      readOnly\n\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                    type=\"button\"\n                    onClick={() => selectUser(todo.userId)}\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nexport const getAllTodos\n  = async() => (await fetch(`${BASE_URL}todos`)).json();\n\nexport const getUser\n  = async userId => (await fetch(`${BASE_URL}users/${userId}`)).json();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nimport { getUser } from '../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: 0,\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    this.loadUser();\n  }\n\n  loadUser = async() => {\n    await getUser(this.props.userId)\n      .then(selectedUser => this.setState({ selectedUser: selectedUser.data }));\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n    const { id, name, email, phone } = selectedUser;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './components/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    await getAllTodos().then(todos => this.setState({ todos: todos.data }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList todos={todos} selectUser={this.selectUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearUser={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}